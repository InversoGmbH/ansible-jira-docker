---
# tasks file for inverso.jira-docker

- name: check required variables
  assert:
    that:
      - jira_data_dir                 | mandatory
      - jira_version                  | mandatory
      - jira_jvm_min_mem              | mandatory
      - jira_jvm_max_mem              | mandatory
      - jira_support_recommended_args | mandatory
      - jira_servername               | mandatory
      - jira_service_enabled          in ['yes','no']
      - jira_image_pull               in ['yes','no']
  tags: ['varcheck']

- name: ensure docker is present
  package:
    name: docker
    state: present

- name: ensure docker is started and enabled
  systemd:
    name: docker
    enabled: '{{ jira_service_enabled }}'
    state: started

- name: install ansible docker dependencies
  pip:
    name: docker-py
    state: present

- name: create jira data dir on docker host
  file:
    path: '{{ jira_data_dir }}'
    state: directory

- name: ensure system cacerts file is also present for jira
  copy:
    src: '/etc/pki/java/cacerts'
    dest: '{{ jira_data_dir }}/'
    remote_src: yes

- name: create jira container
  docker_container:
    name: 'jira'
    hostname: 'jira'
    image: "{{ jira_image_registry }}{{ jira_image_registry | ternary('/','') }}{{ jira_image_name }}:{{ jira_version }}"
    state: "{{ (jira_service_enabled == 'yes') | ternary('started','stopped') }}"
    restart_policy: unless-stopped
    cacert_path: '/etc/pki/tls/certs/ca-bundle.crt'
    network_mode: host
    volumes: '{{ jira_volumes }}'
    env: '{{ jira_env }}'
    pull: "{{ jira_image_pull }}"
